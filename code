// Ultrasonic Sensor-Based Obstacle Avoidance Robot
// Using 3 ultrasonic sensors + L293D motor driver

// Motor pins
const int ENA = 9;   // Enable pin for Motor A
const int IN1 = 8;   // Motor A input 1
const int IN2 = 7;   // Motor A input 2
const int ENB = 3;   // Enable pin for Motor B
const int IN3 = 5;   // Motor B input 3
const int IN4 = 4;   // Motor B input 4

// Ultrasonic pins
const int trigLeft = 10;
const int echoLeft = 11;
const int trigFront = 12;
const int echoFront = 13;
const int trigRight = A0;
const int echoRight = A1;

long duration;
int distanceLeft, distanceFront, distanceRight;

int getDistance(int trigPin, int echoPin) {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH, 20000); // timeout 20ms
  return duration * 0.034 / 2; // cm
}

// Motor functions
void forward() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void backward() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void leftTurn() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void rightTurn() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void stopRobot() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}

void setup() {
  pinMode(ENA, OUTPUT);
  pinMode(ENB, OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

  pinMode(trigLeft, OUTPUT);
  pinMode(echoLeft, INPUT);
  pinMode(trigFront, OUTPUT);
  pinMode(echoFront, INPUT);
  pinMode(trigRight, OUTPUT);
  pinMode(echoRight, INPUT);

  analogWrite(ENA, 150); // Motor speed (0â€“255)
  analogWrite(ENB, 150);

  Serial.begin(9600);
}

void loop() {
  distanceLeft = getDistance(trigLeft, echoLeft);
  distanceFront = getDistance(trigFront, echoFront);
  distanceRight = getDistance(trigRight, echoRight);

  Serial.print("L:");
  Serial.print(distanceLeft);
  Serial.print(" F:");
  Serial.print(distanceFront);
  Serial.print(" R:");
  Serial.println(distanceRight);

  if (distanceFront > 20) {
    forward();
  } else {
    stopRobot();
    delay(200);

    if (distanceLeft > distanceRight) {
      leftTurn();
      delay(400);
    } else {
      rightTurn();
      delay(400);
    }
  }
}
